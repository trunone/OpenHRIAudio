# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src/thirdparty/webrtc/common_audio
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libwebrtccommonaudio_a_AR = $(AR) $(ARFLAGS)
libwebrtccommonaudio_a_LIBADD =
am_libwebrtccommonaudio_a_OBJECTS = resampler.$(OBJEXT) \
	auto_corr_to_refl_coef.$(OBJEXT) auto_correlation.$(OBJEXT) \
	complex_bit_reverse.$(OBJEXT) complex_fft.$(OBJEXT) \
	copy_set_operations.$(OBJEXT) cross_correlation.$(OBJEXT) \
	division_operations.$(OBJEXT) dot_product_with_scale.$(OBJEXT) \
	downsample_fast.$(OBJEXT) energy.$(OBJEXT) filter_ar.$(OBJEXT) \
	filter_ar_fast_q12.$(OBJEXT) filter_ma_fast_q12.$(OBJEXT) \
	get_hanning_window.$(OBJEXT) get_scaling_square.$(OBJEXT) \
	ilbc_specific_functions.$(OBJEXT) levinson_durbin.$(OBJEXT) \
	lpc_to_refl_coef.$(OBJEXT) min_max_operations.$(OBJEXT) \
	min_max_operations_neon.$(OBJEXT) \
	randomization_functions.$(OBJEXT) refl_coef_to_lpc.$(OBJEXT) \
	resample.$(OBJEXT) resample_48khz.$(OBJEXT) \
	resample_by_2.$(OBJEXT) resample_by_2_internal.$(OBJEXT) \
	resample_fractional.$(OBJEXT) spl_sqrt.$(OBJEXT) \
	spl_sqrt_floor.$(OBJEXT) spl_version.$(OBJEXT) \
	splitting_filter.$(OBJEXT) \
	sqrt_of_one_minus_x_squared.$(OBJEXT) \
	vector_scaling_operations.$(OBJEXT) \
	webrtc_fft_t_1024_8.$(OBJEXT) webrtc_fft_t_rad.$(OBJEXT) \
	vad_core.$(OBJEXT) vad_filterbank.$(OBJEXT) vad_gmm.$(OBJEXT) \
	vad_sp.$(OBJEXT) webrtc_vad.$(OBJEXT)
libwebrtccommonaudio_a_OBJECTS = $(am_libwebrtccommonaudio_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libwebrtccommonaudio_a_SOURCES)
DIST_SOURCES = $(libwebrtccommonaudio_a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FFT_PKGCONFIG = @FFT_PKGCONFIG@
FGREP = @FGREP@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
GTKMM_CFLAGS = @GTKMM_CFLAGS@
GTKMM_LIBS = @GTKMM_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKENSIS = @MAKENSIS@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENRTM_CFLAGS = @OPENRTM_CFLAGS@
OPENRTM_LIBS = @OPENRTM_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSUB = @POSUB@
PULSEAUDIO_CFLAGS = @PULSEAUDIO_CFLAGS@
PULSEAUDIO_LIBS = @PULSEAUDIO_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WIN32_LIBS = @WIN32_LIBS@
WINDRES = @WINDRES@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CFLAGS = -fpic -I .. -I resampler/include -I signal_processing/include -I vad/include $(CFLAGS)
AM_CXXFLAGS = -fpic -I .. -I resampler/include -I signal_processing/include -I vad/include $(CFLAGS)
noinst_LIBRARIES = libwebrtccommonaudio.a
libwebrtccommonaudio_a_SOURCES = resampler/resampler.cc \
	signal_processing/auto_corr_to_refl_coef.c \
	signal_processing/auto_correlation.c \
	signal_processing/complex_bit_reverse.c \
	signal_processing/complex_fft.c \
	signal_processing/copy_set_operations.c \
	signal_processing/cross_correlation.c \
	signal_processing/division_operations.c \
	signal_processing/dot_product_with_scale.c \
	signal_processing/downsample_fast.c signal_processing/energy.c \
	signal_processing/filter_ar.c \
	signal_processing/filter_ar_fast_q12.c \
	signal_processing/filter_ma_fast_q12.c \
	signal_processing/get_hanning_window.c \
	signal_processing/get_scaling_square.c \
	signal_processing/ilbc_specific_functions.c \
	signal_processing/levinson_durbin.c \
	signal_processing/lpc_to_refl_coef.c \
	signal_processing/min_max_operations.c \
	signal_processing/min_max_operations_neon.c \
	signal_processing/randomization_functions.c \
	signal_processing/refl_coef_to_lpc.c \
	signal_processing/resample.c \
	signal_processing/resample_48khz.c \
	signal_processing/resample_by_2.c \
	signal_processing/resample_by_2_internal.c \
	signal_processing/resample_fractional.c \
	signal_processing/spl_sqrt.c \
	signal_processing/spl_sqrt_floor.c \
	signal_processing/spl_version.c \
	signal_processing/splitting_filter.c \
	signal_processing/sqrt_of_one_minus_x_squared.c \
	signal_processing/vector_scaling_operations.c \
	signal_processing/webrtc_fft_t_1024_8.c \
	signal_processing/webrtc_fft_t_rad.c vad/vad_core.c \
	vad/vad_filterbank.c vad/vad_gmm.c vad/vad_sp.c \
	vad/webrtc_vad.c
EXTRA_DIST = resampler/include/resampler.h signal_processing/include/signal_processing_library.h signal_processing/include/spl_inl.h signal_processing/include/spl_inl_armv7.h vad/include/webrtc_vad.h signal_processing/resample_by_2_internal.h vad/vad_core.h vad/vad_defines.h vad/vad_filterbank.h vad/vad_gmm.h vad/vad_sp.h
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/thirdparty/webrtc/common_audio/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/thirdparty/webrtc/common_audio/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libwebrtccommonaudio.a: $(libwebrtccommonaudio_a_OBJECTS) $(libwebrtccommonaudio_a_DEPENDENCIES) $(EXTRA_libwebrtccommonaudio_a_DEPENDENCIES) 
	-rm -f libwebrtccommonaudio.a
	$(libwebrtccommonaudio_a_AR) libwebrtccommonaudio.a $(libwebrtccommonaudio_a_OBJECTS) $(libwebrtccommonaudio_a_LIBADD)
	$(RANLIB) libwebrtccommonaudio.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auto_corr_to_refl_coef.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/auto_correlation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complex_bit_reverse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complex_fft.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/copy_set_operations.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cross_correlation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/division_operations.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dot_product_with_scale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/downsample_fast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/energy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter_ar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter_ar_fast_q12.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter_ma_fast_q12.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get_hanning_window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get_scaling_square.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ilbc_specific_functions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/levinson_durbin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lpc_to_refl_coef.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/min_max_operations.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/min_max_operations_neon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/randomization_functions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/refl_coef_to_lpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resample_48khz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resample_by_2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resample_by_2_internal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resample_fractional.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resampler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spl_sqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spl_sqrt_floor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spl_version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/splitting_filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sqrt_of_one_minus_x_squared.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vad_core.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vad_filterbank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vad_gmm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vad_sp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vector_scaling_operations.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/webrtc_fft_t_1024_8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/webrtc_fft_t_rad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/webrtc_vad.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

auto_corr_to_refl_coef.o: signal_processing/auto_corr_to_refl_coef.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT auto_corr_to_refl_coef.o -MD -MP -MF $(DEPDIR)/auto_corr_to_refl_coef.Tpo -c -o auto_corr_to_refl_coef.o `test -f 'signal_processing/auto_corr_to_refl_coef.c' || echo '$(srcdir)/'`signal_processing/auto_corr_to_refl_coef.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/auto_corr_to_refl_coef.Tpo $(DEPDIR)/auto_corr_to_refl_coef.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/auto_corr_to_refl_coef.c' object='auto_corr_to_refl_coef.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o auto_corr_to_refl_coef.o `test -f 'signal_processing/auto_corr_to_refl_coef.c' || echo '$(srcdir)/'`signal_processing/auto_corr_to_refl_coef.c

auto_corr_to_refl_coef.obj: signal_processing/auto_corr_to_refl_coef.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT auto_corr_to_refl_coef.obj -MD -MP -MF $(DEPDIR)/auto_corr_to_refl_coef.Tpo -c -o auto_corr_to_refl_coef.obj `if test -f 'signal_processing/auto_corr_to_refl_coef.c'; then $(CYGPATH_W) 'signal_processing/auto_corr_to_refl_coef.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/auto_corr_to_refl_coef.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/auto_corr_to_refl_coef.Tpo $(DEPDIR)/auto_corr_to_refl_coef.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/auto_corr_to_refl_coef.c' object='auto_corr_to_refl_coef.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o auto_corr_to_refl_coef.obj `if test -f 'signal_processing/auto_corr_to_refl_coef.c'; then $(CYGPATH_W) 'signal_processing/auto_corr_to_refl_coef.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/auto_corr_to_refl_coef.c'; fi`

auto_correlation.o: signal_processing/auto_correlation.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT auto_correlation.o -MD -MP -MF $(DEPDIR)/auto_correlation.Tpo -c -o auto_correlation.o `test -f 'signal_processing/auto_correlation.c' || echo '$(srcdir)/'`signal_processing/auto_correlation.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/auto_correlation.Tpo $(DEPDIR)/auto_correlation.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/auto_correlation.c' object='auto_correlation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o auto_correlation.o `test -f 'signal_processing/auto_correlation.c' || echo '$(srcdir)/'`signal_processing/auto_correlation.c

auto_correlation.obj: signal_processing/auto_correlation.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT auto_correlation.obj -MD -MP -MF $(DEPDIR)/auto_correlation.Tpo -c -o auto_correlation.obj `if test -f 'signal_processing/auto_correlation.c'; then $(CYGPATH_W) 'signal_processing/auto_correlation.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/auto_correlation.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/auto_correlation.Tpo $(DEPDIR)/auto_correlation.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/auto_correlation.c' object='auto_correlation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o auto_correlation.obj `if test -f 'signal_processing/auto_correlation.c'; then $(CYGPATH_W) 'signal_processing/auto_correlation.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/auto_correlation.c'; fi`

complex_bit_reverse.o: signal_processing/complex_bit_reverse.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_bit_reverse.o -MD -MP -MF $(DEPDIR)/complex_bit_reverse.Tpo -c -o complex_bit_reverse.o `test -f 'signal_processing/complex_bit_reverse.c' || echo '$(srcdir)/'`signal_processing/complex_bit_reverse.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/complex_bit_reverse.Tpo $(DEPDIR)/complex_bit_reverse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/complex_bit_reverse.c' object='complex_bit_reverse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_bit_reverse.o `test -f 'signal_processing/complex_bit_reverse.c' || echo '$(srcdir)/'`signal_processing/complex_bit_reverse.c

complex_bit_reverse.obj: signal_processing/complex_bit_reverse.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_bit_reverse.obj -MD -MP -MF $(DEPDIR)/complex_bit_reverse.Tpo -c -o complex_bit_reverse.obj `if test -f 'signal_processing/complex_bit_reverse.c'; then $(CYGPATH_W) 'signal_processing/complex_bit_reverse.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/complex_bit_reverse.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/complex_bit_reverse.Tpo $(DEPDIR)/complex_bit_reverse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/complex_bit_reverse.c' object='complex_bit_reverse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_bit_reverse.obj `if test -f 'signal_processing/complex_bit_reverse.c'; then $(CYGPATH_W) 'signal_processing/complex_bit_reverse.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/complex_bit_reverse.c'; fi`

complex_fft.o: signal_processing/complex_fft.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_fft.o -MD -MP -MF $(DEPDIR)/complex_fft.Tpo -c -o complex_fft.o `test -f 'signal_processing/complex_fft.c' || echo '$(srcdir)/'`signal_processing/complex_fft.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/complex_fft.Tpo $(DEPDIR)/complex_fft.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/complex_fft.c' object='complex_fft.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_fft.o `test -f 'signal_processing/complex_fft.c' || echo '$(srcdir)/'`signal_processing/complex_fft.c

complex_fft.obj: signal_processing/complex_fft.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_fft.obj -MD -MP -MF $(DEPDIR)/complex_fft.Tpo -c -o complex_fft.obj `if test -f 'signal_processing/complex_fft.c'; then $(CYGPATH_W) 'signal_processing/complex_fft.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/complex_fft.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/complex_fft.Tpo $(DEPDIR)/complex_fft.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/complex_fft.c' object='complex_fft.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_fft.obj `if test -f 'signal_processing/complex_fft.c'; then $(CYGPATH_W) 'signal_processing/complex_fft.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/complex_fft.c'; fi`

copy_set_operations.o: signal_processing/copy_set_operations.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT copy_set_operations.o -MD -MP -MF $(DEPDIR)/copy_set_operations.Tpo -c -o copy_set_operations.o `test -f 'signal_processing/copy_set_operations.c' || echo '$(srcdir)/'`signal_processing/copy_set_operations.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/copy_set_operations.Tpo $(DEPDIR)/copy_set_operations.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/copy_set_operations.c' object='copy_set_operations.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o copy_set_operations.o `test -f 'signal_processing/copy_set_operations.c' || echo '$(srcdir)/'`signal_processing/copy_set_operations.c

copy_set_operations.obj: signal_processing/copy_set_operations.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT copy_set_operations.obj -MD -MP -MF $(DEPDIR)/copy_set_operations.Tpo -c -o copy_set_operations.obj `if test -f 'signal_processing/copy_set_operations.c'; then $(CYGPATH_W) 'signal_processing/copy_set_operations.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/copy_set_operations.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/copy_set_operations.Tpo $(DEPDIR)/copy_set_operations.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/copy_set_operations.c' object='copy_set_operations.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o copy_set_operations.obj `if test -f 'signal_processing/copy_set_operations.c'; then $(CYGPATH_W) 'signal_processing/copy_set_operations.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/copy_set_operations.c'; fi`

cross_correlation.o: signal_processing/cross_correlation.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cross_correlation.o -MD -MP -MF $(DEPDIR)/cross_correlation.Tpo -c -o cross_correlation.o `test -f 'signal_processing/cross_correlation.c' || echo '$(srcdir)/'`signal_processing/cross_correlation.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/cross_correlation.Tpo $(DEPDIR)/cross_correlation.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/cross_correlation.c' object='cross_correlation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cross_correlation.o `test -f 'signal_processing/cross_correlation.c' || echo '$(srcdir)/'`signal_processing/cross_correlation.c

cross_correlation.obj: signal_processing/cross_correlation.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cross_correlation.obj -MD -MP -MF $(DEPDIR)/cross_correlation.Tpo -c -o cross_correlation.obj `if test -f 'signal_processing/cross_correlation.c'; then $(CYGPATH_W) 'signal_processing/cross_correlation.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/cross_correlation.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/cross_correlation.Tpo $(DEPDIR)/cross_correlation.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/cross_correlation.c' object='cross_correlation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cross_correlation.obj `if test -f 'signal_processing/cross_correlation.c'; then $(CYGPATH_W) 'signal_processing/cross_correlation.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/cross_correlation.c'; fi`

division_operations.o: signal_processing/division_operations.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT division_operations.o -MD -MP -MF $(DEPDIR)/division_operations.Tpo -c -o division_operations.o `test -f 'signal_processing/division_operations.c' || echo '$(srcdir)/'`signal_processing/division_operations.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/division_operations.Tpo $(DEPDIR)/division_operations.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/division_operations.c' object='division_operations.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o division_operations.o `test -f 'signal_processing/division_operations.c' || echo '$(srcdir)/'`signal_processing/division_operations.c

division_operations.obj: signal_processing/division_operations.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT division_operations.obj -MD -MP -MF $(DEPDIR)/division_operations.Tpo -c -o division_operations.obj `if test -f 'signal_processing/division_operations.c'; then $(CYGPATH_W) 'signal_processing/division_operations.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/division_operations.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/division_operations.Tpo $(DEPDIR)/division_operations.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/division_operations.c' object='division_operations.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o division_operations.obj `if test -f 'signal_processing/division_operations.c'; then $(CYGPATH_W) 'signal_processing/division_operations.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/division_operations.c'; fi`

dot_product_with_scale.o: signal_processing/dot_product_with_scale.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dot_product_with_scale.o -MD -MP -MF $(DEPDIR)/dot_product_with_scale.Tpo -c -o dot_product_with_scale.o `test -f 'signal_processing/dot_product_with_scale.c' || echo '$(srcdir)/'`signal_processing/dot_product_with_scale.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/dot_product_with_scale.Tpo $(DEPDIR)/dot_product_with_scale.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/dot_product_with_scale.c' object='dot_product_with_scale.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dot_product_with_scale.o `test -f 'signal_processing/dot_product_with_scale.c' || echo '$(srcdir)/'`signal_processing/dot_product_with_scale.c

dot_product_with_scale.obj: signal_processing/dot_product_with_scale.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dot_product_with_scale.obj -MD -MP -MF $(DEPDIR)/dot_product_with_scale.Tpo -c -o dot_product_with_scale.obj `if test -f 'signal_processing/dot_product_with_scale.c'; then $(CYGPATH_W) 'signal_processing/dot_product_with_scale.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/dot_product_with_scale.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/dot_product_with_scale.Tpo $(DEPDIR)/dot_product_with_scale.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/dot_product_with_scale.c' object='dot_product_with_scale.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dot_product_with_scale.obj `if test -f 'signal_processing/dot_product_with_scale.c'; then $(CYGPATH_W) 'signal_processing/dot_product_with_scale.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/dot_product_with_scale.c'; fi`

downsample_fast.o: signal_processing/downsample_fast.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT downsample_fast.o -MD -MP -MF $(DEPDIR)/downsample_fast.Tpo -c -o downsample_fast.o `test -f 'signal_processing/downsample_fast.c' || echo '$(srcdir)/'`signal_processing/downsample_fast.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/downsample_fast.Tpo $(DEPDIR)/downsample_fast.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/downsample_fast.c' object='downsample_fast.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o downsample_fast.o `test -f 'signal_processing/downsample_fast.c' || echo '$(srcdir)/'`signal_processing/downsample_fast.c

downsample_fast.obj: signal_processing/downsample_fast.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT downsample_fast.obj -MD -MP -MF $(DEPDIR)/downsample_fast.Tpo -c -o downsample_fast.obj `if test -f 'signal_processing/downsample_fast.c'; then $(CYGPATH_W) 'signal_processing/downsample_fast.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/downsample_fast.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/downsample_fast.Tpo $(DEPDIR)/downsample_fast.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/downsample_fast.c' object='downsample_fast.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o downsample_fast.obj `if test -f 'signal_processing/downsample_fast.c'; then $(CYGPATH_W) 'signal_processing/downsample_fast.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/downsample_fast.c'; fi`

energy.o: signal_processing/energy.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT energy.o -MD -MP -MF $(DEPDIR)/energy.Tpo -c -o energy.o `test -f 'signal_processing/energy.c' || echo '$(srcdir)/'`signal_processing/energy.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/energy.Tpo $(DEPDIR)/energy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/energy.c' object='energy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o energy.o `test -f 'signal_processing/energy.c' || echo '$(srcdir)/'`signal_processing/energy.c

energy.obj: signal_processing/energy.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT energy.obj -MD -MP -MF $(DEPDIR)/energy.Tpo -c -o energy.obj `if test -f 'signal_processing/energy.c'; then $(CYGPATH_W) 'signal_processing/energy.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/energy.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/energy.Tpo $(DEPDIR)/energy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/energy.c' object='energy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o energy.obj `if test -f 'signal_processing/energy.c'; then $(CYGPATH_W) 'signal_processing/energy.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/energy.c'; fi`

filter_ar.o: signal_processing/filter_ar.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_ar.o -MD -MP -MF $(DEPDIR)/filter_ar.Tpo -c -o filter_ar.o `test -f 'signal_processing/filter_ar.c' || echo '$(srcdir)/'`signal_processing/filter_ar.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/filter_ar.Tpo $(DEPDIR)/filter_ar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/filter_ar.c' object='filter_ar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_ar.o `test -f 'signal_processing/filter_ar.c' || echo '$(srcdir)/'`signal_processing/filter_ar.c

filter_ar.obj: signal_processing/filter_ar.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_ar.obj -MD -MP -MF $(DEPDIR)/filter_ar.Tpo -c -o filter_ar.obj `if test -f 'signal_processing/filter_ar.c'; then $(CYGPATH_W) 'signal_processing/filter_ar.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/filter_ar.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/filter_ar.Tpo $(DEPDIR)/filter_ar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/filter_ar.c' object='filter_ar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_ar.obj `if test -f 'signal_processing/filter_ar.c'; then $(CYGPATH_W) 'signal_processing/filter_ar.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/filter_ar.c'; fi`

filter_ar_fast_q12.o: signal_processing/filter_ar_fast_q12.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_ar_fast_q12.o -MD -MP -MF $(DEPDIR)/filter_ar_fast_q12.Tpo -c -o filter_ar_fast_q12.o `test -f 'signal_processing/filter_ar_fast_q12.c' || echo '$(srcdir)/'`signal_processing/filter_ar_fast_q12.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/filter_ar_fast_q12.Tpo $(DEPDIR)/filter_ar_fast_q12.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/filter_ar_fast_q12.c' object='filter_ar_fast_q12.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_ar_fast_q12.o `test -f 'signal_processing/filter_ar_fast_q12.c' || echo '$(srcdir)/'`signal_processing/filter_ar_fast_q12.c

filter_ar_fast_q12.obj: signal_processing/filter_ar_fast_q12.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_ar_fast_q12.obj -MD -MP -MF $(DEPDIR)/filter_ar_fast_q12.Tpo -c -o filter_ar_fast_q12.obj `if test -f 'signal_processing/filter_ar_fast_q12.c'; then $(CYGPATH_W) 'signal_processing/filter_ar_fast_q12.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/filter_ar_fast_q12.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/filter_ar_fast_q12.Tpo $(DEPDIR)/filter_ar_fast_q12.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/filter_ar_fast_q12.c' object='filter_ar_fast_q12.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_ar_fast_q12.obj `if test -f 'signal_processing/filter_ar_fast_q12.c'; then $(CYGPATH_W) 'signal_processing/filter_ar_fast_q12.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/filter_ar_fast_q12.c'; fi`

filter_ma_fast_q12.o: signal_processing/filter_ma_fast_q12.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_ma_fast_q12.o -MD -MP -MF $(DEPDIR)/filter_ma_fast_q12.Tpo -c -o filter_ma_fast_q12.o `test -f 'signal_processing/filter_ma_fast_q12.c' || echo '$(srcdir)/'`signal_processing/filter_ma_fast_q12.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/filter_ma_fast_q12.Tpo $(DEPDIR)/filter_ma_fast_q12.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/filter_ma_fast_q12.c' object='filter_ma_fast_q12.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_ma_fast_q12.o `test -f 'signal_processing/filter_ma_fast_q12.c' || echo '$(srcdir)/'`signal_processing/filter_ma_fast_q12.c

filter_ma_fast_q12.obj: signal_processing/filter_ma_fast_q12.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_ma_fast_q12.obj -MD -MP -MF $(DEPDIR)/filter_ma_fast_q12.Tpo -c -o filter_ma_fast_q12.obj `if test -f 'signal_processing/filter_ma_fast_q12.c'; then $(CYGPATH_W) 'signal_processing/filter_ma_fast_q12.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/filter_ma_fast_q12.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/filter_ma_fast_q12.Tpo $(DEPDIR)/filter_ma_fast_q12.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/filter_ma_fast_q12.c' object='filter_ma_fast_q12.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_ma_fast_q12.obj `if test -f 'signal_processing/filter_ma_fast_q12.c'; then $(CYGPATH_W) 'signal_processing/filter_ma_fast_q12.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/filter_ma_fast_q12.c'; fi`

get_hanning_window.o: signal_processing/get_hanning_window.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_hanning_window.o -MD -MP -MF $(DEPDIR)/get_hanning_window.Tpo -c -o get_hanning_window.o `test -f 'signal_processing/get_hanning_window.c' || echo '$(srcdir)/'`signal_processing/get_hanning_window.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/get_hanning_window.Tpo $(DEPDIR)/get_hanning_window.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/get_hanning_window.c' object='get_hanning_window.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_hanning_window.o `test -f 'signal_processing/get_hanning_window.c' || echo '$(srcdir)/'`signal_processing/get_hanning_window.c

get_hanning_window.obj: signal_processing/get_hanning_window.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_hanning_window.obj -MD -MP -MF $(DEPDIR)/get_hanning_window.Tpo -c -o get_hanning_window.obj `if test -f 'signal_processing/get_hanning_window.c'; then $(CYGPATH_W) 'signal_processing/get_hanning_window.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/get_hanning_window.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/get_hanning_window.Tpo $(DEPDIR)/get_hanning_window.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/get_hanning_window.c' object='get_hanning_window.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_hanning_window.obj `if test -f 'signal_processing/get_hanning_window.c'; then $(CYGPATH_W) 'signal_processing/get_hanning_window.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/get_hanning_window.c'; fi`

get_scaling_square.o: signal_processing/get_scaling_square.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_scaling_square.o -MD -MP -MF $(DEPDIR)/get_scaling_square.Tpo -c -o get_scaling_square.o `test -f 'signal_processing/get_scaling_square.c' || echo '$(srcdir)/'`signal_processing/get_scaling_square.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/get_scaling_square.Tpo $(DEPDIR)/get_scaling_square.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/get_scaling_square.c' object='get_scaling_square.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_scaling_square.o `test -f 'signal_processing/get_scaling_square.c' || echo '$(srcdir)/'`signal_processing/get_scaling_square.c

get_scaling_square.obj: signal_processing/get_scaling_square.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_scaling_square.obj -MD -MP -MF $(DEPDIR)/get_scaling_square.Tpo -c -o get_scaling_square.obj `if test -f 'signal_processing/get_scaling_square.c'; then $(CYGPATH_W) 'signal_processing/get_scaling_square.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/get_scaling_square.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/get_scaling_square.Tpo $(DEPDIR)/get_scaling_square.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/get_scaling_square.c' object='get_scaling_square.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_scaling_square.obj `if test -f 'signal_processing/get_scaling_square.c'; then $(CYGPATH_W) 'signal_processing/get_scaling_square.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/get_scaling_square.c'; fi`

ilbc_specific_functions.o: signal_processing/ilbc_specific_functions.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ilbc_specific_functions.o -MD -MP -MF $(DEPDIR)/ilbc_specific_functions.Tpo -c -o ilbc_specific_functions.o `test -f 'signal_processing/ilbc_specific_functions.c' || echo '$(srcdir)/'`signal_processing/ilbc_specific_functions.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/ilbc_specific_functions.Tpo $(DEPDIR)/ilbc_specific_functions.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/ilbc_specific_functions.c' object='ilbc_specific_functions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ilbc_specific_functions.o `test -f 'signal_processing/ilbc_specific_functions.c' || echo '$(srcdir)/'`signal_processing/ilbc_specific_functions.c

ilbc_specific_functions.obj: signal_processing/ilbc_specific_functions.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ilbc_specific_functions.obj -MD -MP -MF $(DEPDIR)/ilbc_specific_functions.Tpo -c -o ilbc_specific_functions.obj `if test -f 'signal_processing/ilbc_specific_functions.c'; then $(CYGPATH_W) 'signal_processing/ilbc_specific_functions.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/ilbc_specific_functions.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/ilbc_specific_functions.Tpo $(DEPDIR)/ilbc_specific_functions.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/ilbc_specific_functions.c' object='ilbc_specific_functions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ilbc_specific_functions.obj `if test -f 'signal_processing/ilbc_specific_functions.c'; then $(CYGPATH_W) 'signal_processing/ilbc_specific_functions.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/ilbc_specific_functions.c'; fi`

levinson_durbin.o: signal_processing/levinson_durbin.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT levinson_durbin.o -MD -MP -MF $(DEPDIR)/levinson_durbin.Tpo -c -o levinson_durbin.o `test -f 'signal_processing/levinson_durbin.c' || echo '$(srcdir)/'`signal_processing/levinson_durbin.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/levinson_durbin.Tpo $(DEPDIR)/levinson_durbin.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/levinson_durbin.c' object='levinson_durbin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o levinson_durbin.o `test -f 'signal_processing/levinson_durbin.c' || echo '$(srcdir)/'`signal_processing/levinson_durbin.c

levinson_durbin.obj: signal_processing/levinson_durbin.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT levinson_durbin.obj -MD -MP -MF $(DEPDIR)/levinson_durbin.Tpo -c -o levinson_durbin.obj `if test -f 'signal_processing/levinson_durbin.c'; then $(CYGPATH_W) 'signal_processing/levinson_durbin.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/levinson_durbin.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/levinson_durbin.Tpo $(DEPDIR)/levinson_durbin.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/levinson_durbin.c' object='levinson_durbin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o levinson_durbin.obj `if test -f 'signal_processing/levinson_durbin.c'; then $(CYGPATH_W) 'signal_processing/levinson_durbin.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/levinson_durbin.c'; fi`

lpc_to_refl_coef.o: signal_processing/lpc_to_refl_coef.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc_to_refl_coef.o -MD -MP -MF $(DEPDIR)/lpc_to_refl_coef.Tpo -c -o lpc_to_refl_coef.o `test -f 'signal_processing/lpc_to_refl_coef.c' || echo '$(srcdir)/'`signal_processing/lpc_to_refl_coef.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lpc_to_refl_coef.Tpo $(DEPDIR)/lpc_to_refl_coef.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/lpc_to_refl_coef.c' object='lpc_to_refl_coef.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc_to_refl_coef.o `test -f 'signal_processing/lpc_to_refl_coef.c' || echo '$(srcdir)/'`signal_processing/lpc_to_refl_coef.c

lpc_to_refl_coef.obj: signal_processing/lpc_to_refl_coef.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc_to_refl_coef.obj -MD -MP -MF $(DEPDIR)/lpc_to_refl_coef.Tpo -c -o lpc_to_refl_coef.obj `if test -f 'signal_processing/lpc_to_refl_coef.c'; then $(CYGPATH_W) 'signal_processing/lpc_to_refl_coef.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/lpc_to_refl_coef.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/lpc_to_refl_coef.Tpo $(DEPDIR)/lpc_to_refl_coef.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/lpc_to_refl_coef.c' object='lpc_to_refl_coef.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc_to_refl_coef.obj `if test -f 'signal_processing/lpc_to_refl_coef.c'; then $(CYGPATH_W) 'signal_processing/lpc_to_refl_coef.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/lpc_to_refl_coef.c'; fi`

min_max_operations.o: signal_processing/min_max_operations.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT min_max_operations.o -MD -MP -MF $(DEPDIR)/min_max_operations.Tpo -c -o min_max_operations.o `test -f 'signal_processing/min_max_operations.c' || echo '$(srcdir)/'`signal_processing/min_max_operations.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/min_max_operations.Tpo $(DEPDIR)/min_max_operations.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/min_max_operations.c' object='min_max_operations.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o min_max_operations.o `test -f 'signal_processing/min_max_operations.c' || echo '$(srcdir)/'`signal_processing/min_max_operations.c

min_max_operations.obj: signal_processing/min_max_operations.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT min_max_operations.obj -MD -MP -MF $(DEPDIR)/min_max_operations.Tpo -c -o min_max_operations.obj `if test -f 'signal_processing/min_max_operations.c'; then $(CYGPATH_W) 'signal_processing/min_max_operations.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/min_max_operations.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/min_max_operations.Tpo $(DEPDIR)/min_max_operations.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/min_max_operations.c' object='min_max_operations.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o min_max_operations.obj `if test -f 'signal_processing/min_max_operations.c'; then $(CYGPATH_W) 'signal_processing/min_max_operations.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/min_max_operations.c'; fi`

min_max_operations_neon.o: signal_processing/min_max_operations_neon.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT min_max_operations_neon.o -MD -MP -MF $(DEPDIR)/min_max_operations_neon.Tpo -c -o min_max_operations_neon.o `test -f 'signal_processing/min_max_operations_neon.c' || echo '$(srcdir)/'`signal_processing/min_max_operations_neon.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/min_max_operations_neon.Tpo $(DEPDIR)/min_max_operations_neon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/min_max_operations_neon.c' object='min_max_operations_neon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o min_max_operations_neon.o `test -f 'signal_processing/min_max_operations_neon.c' || echo '$(srcdir)/'`signal_processing/min_max_operations_neon.c

min_max_operations_neon.obj: signal_processing/min_max_operations_neon.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT min_max_operations_neon.obj -MD -MP -MF $(DEPDIR)/min_max_operations_neon.Tpo -c -o min_max_operations_neon.obj `if test -f 'signal_processing/min_max_operations_neon.c'; then $(CYGPATH_W) 'signal_processing/min_max_operations_neon.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/min_max_operations_neon.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/min_max_operations_neon.Tpo $(DEPDIR)/min_max_operations_neon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/min_max_operations_neon.c' object='min_max_operations_neon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o min_max_operations_neon.obj `if test -f 'signal_processing/min_max_operations_neon.c'; then $(CYGPATH_W) 'signal_processing/min_max_operations_neon.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/min_max_operations_neon.c'; fi`

randomization_functions.o: signal_processing/randomization_functions.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randomization_functions.o -MD -MP -MF $(DEPDIR)/randomization_functions.Tpo -c -o randomization_functions.o `test -f 'signal_processing/randomization_functions.c' || echo '$(srcdir)/'`signal_processing/randomization_functions.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/randomization_functions.Tpo $(DEPDIR)/randomization_functions.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/randomization_functions.c' object='randomization_functions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randomization_functions.o `test -f 'signal_processing/randomization_functions.c' || echo '$(srcdir)/'`signal_processing/randomization_functions.c

randomization_functions.obj: signal_processing/randomization_functions.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randomization_functions.obj -MD -MP -MF $(DEPDIR)/randomization_functions.Tpo -c -o randomization_functions.obj `if test -f 'signal_processing/randomization_functions.c'; then $(CYGPATH_W) 'signal_processing/randomization_functions.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/randomization_functions.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/randomization_functions.Tpo $(DEPDIR)/randomization_functions.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/randomization_functions.c' object='randomization_functions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randomization_functions.obj `if test -f 'signal_processing/randomization_functions.c'; then $(CYGPATH_W) 'signal_processing/randomization_functions.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/randomization_functions.c'; fi`

refl_coef_to_lpc.o: signal_processing/refl_coef_to_lpc.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT refl_coef_to_lpc.o -MD -MP -MF $(DEPDIR)/refl_coef_to_lpc.Tpo -c -o refl_coef_to_lpc.o `test -f 'signal_processing/refl_coef_to_lpc.c' || echo '$(srcdir)/'`signal_processing/refl_coef_to_lpc.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/refl_coef_to_lpc.Tpo $(DEPDIR)/refl_coef_to_lpc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/refl_coef_to_lpc.c' object='refl_coef_to_lpc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o refl_coef_to_lpc.o `test -f 'signal_processing/refl_coef_to_lpc.c' || echo '$(srcdir)/'`signal_processing/refl_coef_to_lpc.c

refl_coef_to_lpc.obj: signal_processing/refl_coef_to_lpc.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT refl_coef_to_lpc.obj -MD -MP -MF $(DEPDIR)/refl_coef_to_lpc.Tpo -c -o refl_coef_to_lpc.obj `if test -f 'signal_processing/refl_coef_to_lpc.c'; then $(CYGPATH_W) 'signal_processing/refl_coef_to_lpc.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/refl_coef_to_lpc.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/refl_coef_to_lpc.Tpo $(DEPDIR)/refl_coef_to_lpc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/refl_coef_to_lpc.c' object='refl_coef_to_lpc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o refl_coef_to_lpc.obj `if test -f 'signal_processing/refl_coef_to_lpc.c'; then $(CYGPATH_W) 'signal_processing/refl_coef_to_lpc.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/refl_coef_to_lpc.c'; fi`

resample.o: signal_processing/resample.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample.o -MD -MP -MF $(DEPDIR)/resample.Tpo -c -o resample.o `test -f 'signal_processing/resample.c' || echo '$(srcdir)/'`signal_processing/resample.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample.Tpo $(DEPDIR)/resample.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample.c' object='resample.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample.o `test -f 'signal_processing/resample.c' || echo '$(srcdir)/'`signal_processing/resample.c

resample.obj: signal_processing/resample.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample.obj -MD -MP -MF $(DEPDIR)/resample.Tpo -c -o resample.obj `if test -f 'signal_processing/resample.c'; then $(CYGPATH_W) 'signal_processing/resample.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample.Tpo $(DEPDIR)/resample.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample.c' object='resample.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample.obj `if test -f 'signal_processing/resample.c'; then $(CYGPATH_W) 'signal_processing/resample.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample.c'; fi`

resample_48khz.o: signal_processing/resample_48khz.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_48khz.o -MD -MP -MF $(DEPDIR)/resample_48khz.Tpo -c -o resample_48khz.o `test -f 'signal_processing/resample_48khz.c' || echo '$(srcdir)/'`signal_processing/resample_48khz.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample_48khz.Tpo $(DEPDIR)/resample_48khz.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample_48khz.c' object='resample_48khz.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_48khz.o `test -f 'signal_processing/resample_48khz.c' || echo '$(srcdir)/'`signal_processing/resample_48khz.c

resample_48khz.obj: signal_processing/resample_48khz.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_48khz.obj -MD -MP -MF $(DEPDIR)/resample_48khz.Tpo -c -o resample_48khz.obj `if test -f 'signal_processing/resample_48khz.c'; then $(CYGPATH_W) 'signal_processing/resample_48khz.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample_48khz.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample_48khz.Tpo $(DEPDIR)/resample_48khz.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample_48khz.c' object='resample_48khz.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_48khz.obj `if test -f 'signal_processing/resample_48khz.c'; then $(CYGPATH_W) 'signal_processing/resample_48khz.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample_48khz.c'; fi`

resample_by_2.o: signal_processing/resample_by_2.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_by_2.o -MD -MP -MF $(DEPDIR)/resample_by_2.Tpo -c -o resample_by_2.o `test -f 'signal_processing/resample_by_2.c' || echo '$(srcdir)/'`signal_processing/resample_by_2.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample_by_2.Tpo $(DEPDIR)/resample_by_2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample_by_2.c' object='resample_by_2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_by_2.o `test -f 'signal_processing/resample_by_2.c' || echo '$(srcdir)/'`signal_processing/resample_by_2.c

resample_by_2.obj: signal_processing/resample_by_2.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_by_2.obj -MD -MP -MF $(DEPDIR)/resample_by_2.Tpo -c -o resample_by_2.obj `if test -f 'signal_processing/resample_by_2.c'; then $(CYGPATH_W) 'signal_processing/resample_by_2.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample_by_2.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample_by_2.Tpo $(DEPDIR)/resample_by_2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample_by_2.c' object='resample_by_2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_by_2.obj `if test -f 'signal_processing/resample_by_2.c'; then $(CYGPATH_W) 'signal_processing/resample_by_2.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample_by_2.c'; fi`

resample_by_2_internal.o: signal_processing/resample_by_2_internal.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_by_2_internal.o -MD -MP -MF $(DEPDIR)/resample_by_2_internal.Tpo -c -o resample_by_2_internal.o `test -f 'signal_processing/resample_by_2_internal.c' || echo '$(srcdir)/'`signal_processing/resample_by_2_internal.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample_by_2_internal.Tpo $(DEPDIR)/resample_by_2_internal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample_by_2_internal.c' object='resample_by_2_internal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_by_2_internal.o `test -f 'signal_processing/resample_by_2_internal.c' || echo '$(srcdir)/'`signal_processing/resample_by_2_internal.c

resample_by_2_internal.obj: signal_processing/resample_by_2_internal.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_by_2_internal.obj -MD -MP -MF $(DEPDIR)/resample_by_2_internal.Tpo -c -o resample_by_2_internal.obj `if test -f 'signal_processing/resample_by_2_internal.c'; then $(CYGPATH_W) 'signal_processing/resample_by_2_internal.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample_by_2_internal.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample_by_2_internal.Tpo $(DEPDIR)/resample_by_2_internal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample_by_2_internal.c' object='resample_by_2_internal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_by_2_internal.obj `if test -f 'signal_processing/resample_by_2_internal.c'; then $(CYGPATH_W) 'signal_processing/resample_by_2_internal.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample_by_2_internal.c'; fi`

resample_fractional.o: signal_processing/resample_fractional.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_fractional.o -MD -MP -MF $(DEPDIR)/resample_fractional.Tpo -c -o resample_fractional.o `test -f 'signal_processing/resample_fractional.c' || echo '$(srcdir)/'`signal_processing/resample_fractional.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample_fractional.Tpo $(DEPDIR)/resample_fractional.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample_fractional.c' object='resample_fractional.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_fractional.o `test -f 'signal_processing/resample_fractional.c' || echo '$(srcdir)/'`signal_processing/resample_fractional.c

resample_fractional.obj: signal_processing/resample_fractional.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_fractional.obj -MD -MP -MF $(DEPDIR)/resample_fractional.Tpo -c -o resample_fractional.obj `if test -f 'signal_processing/resample_fractional.c'; then $(CYGPATH_W) 'signal_processing/resample_fractional.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample_fractional.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/resample_fractional.Tpo $(DEPDIR)/resample_fractional.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/resample_fractional.c' object='resample_fractional.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_fractional.obj `if test -f 'signal_processing/resample_fractional.c'; then $(CYGPATH_W) 'signal_processing/resample_fractional.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/resample_fractional.c'; fi`

spl_sqrt.o: signal_processing/spl_sqrt.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_sqrt.o -MD -MP -MF $(DEPDIR)/spl_sqrt.Tpo -c -o spl_sqrt.o `test -f 'signal_processing/spl_sqrt.c' || echo '$(srcdir)/'`signal_processing/spl_sqrt.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/spl_sqrt.Tpo $(DEPDIR)/spl_sqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/spl_sqrt.c' object='spl_sqrt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_sqrt.o `test -f 'signal_processing/spl_sqrt.c' || echo '$(srcdir)/'`signal_processing/spl_sqrt.c

spl_sqrt.obj: signal_processing/spl_sqrt.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_sqrt.obj -MD -MP -MF $(DEPDIR)/spl_sqrt.Tpo -c -o spl_sqrt.obj `if test -f 'signal_processing/spl_sqrt.c'; then $(CYGPATH_W) 'signal_processing/spl_sqrt.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/spl_sqrt.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/spl_sqrt.Tpo $(DEPDIR)/spl_sqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/spl_sqrt.c' object='spl_sqrt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_sqrt.obj `if test -f 'signal_processing/spl_sqrt.c'; then $(CYGPATH_W) 'signal_processing/spl_sqrt.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/spl_sqrt.c'; fi`

spl_sqrt_floor.o: signal_processing/spl_sqrt_floor.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_sqrt_floor.o -MD -MP -MF $(DEPDIR)/spl_sqrt_floor.Tpo -c -o spl_sqrt_floor.o `test -f 'signal_processing/spl_sqrt_floor.c' || echo '$(srcdir)/'`signal_processing/spl_sqrt_floor.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/spl_sqrt_floor.Tpo $(DEPDIR)/spl_sqrt_floor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/spl_sqrt_floor.c' object='spl_sqrt_floor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_sqrt_floor.o `test -f 'signal_processing/spl_sqrt_floor.c' || echo '$(srcdir)/'`signal_processing/spl_sqrt_floor.c

spl_sqrt_floor.obj: signal_processing/spl_sqrt_floor.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_sqrt_floor.obj -MD -MP -MF $(DEPDIR)/spl_sqrt_floor.Tpo -c -o spl_sqrt_floor.obj `if test -f 'signal_processing/spl_sqrt_floor.c'; then $(CYGPATH_W) 'signal_processing/spl_sqrt_floor.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/spl_sqrt_floor.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/spl_sqrt_floor.Tpo $(DEPDIR)/spl_sqrt_floor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/spl_sqrt_floor.c' object='spl_sqrt_floor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_sqrt_floor.obj `if test -f 'signal_processing/spl_sqrt_floor.c'; then $(CYGPATH_W) 'signal_processing/spl_sqrt_floor.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/spl_sqrt_floor.c'; fi`

spl_version.o: signal_processing/spl_version.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_version.o -MD -MP -MF $(DEPDIR)/spl_version.Tpo -c -o spl_version.o `test -f 'signal_processing/spl_version.c' || echo '$(srcdir)/'`signal_processing/spl_version.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/spl_version.Tpo $(DEPDIR)/spl_version.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/spl_version.c' object='spl_version.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_version.o `test -f 'signal_processing/spl_version.c' || echo '$(srcdir)/'`signal_processing/spl_version.c

spl_version.obj: signal_processing/spl_version.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_version.obj -MD -MP -MF $(DEPDIR)/spl_version.Tpo -c -o spl_version.obj `if test -f 'signal_processing/spl_version.c'; then $(CYGPATH_W) 'signal_processing/spl_version.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/spl_version.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/spl_version.Tpo $(DEPDIR)/spl_version.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/spl_version.c' object='spl_version.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_version.obj `if test -f 'signal_processing/spl_version.c'; then $(CYGPATH_W) 'signal_processing/spl_version.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/spl_version.c'; fi`

splitting_filter.o: signal_processing/splitting_filter.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT splitting_filter.o -MD -MP -MF $(DEPDIR)/splitting_filter.Tpo -c -o splitting_filter.o `test -f 'signal_processing/splitting_filter.c' || echo '$(srcdir)/'`signal_processing/splitting_filter.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/splitting_filter.Tpo $(DEPDIR)/splitting_filter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/splitting_filter.c' object='splitting_filter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o splitting_filter.o `test -f 'signal_processing/splitting_filter.c' || echo '$(srcdir)/'`signal_processing/splitting_filter.c

splitting_filter.obj: signal_processing/splitting_filter.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT splitting_filter.obj -MD -MP -MF $(DEPDIR)/splitting_filter.Tpo -c -o splitting_filter.obj `if test -f 'signal_processing/splitting_filter.c'; then $(CYGPATH_W) 'signal_processing/splitting_filter.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/splitting_filter.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/splitting_filter.Tpo $(DEPDIR)/splitting_filter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/splitting_filter.c' object='splitting_filter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o splitting_filter.obj `if test -f 'signal_processing/splitting_filter.c'; then $(CYGPATH_W) 'signal_processing/splitting_filter.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/splitting_filter.c'; fi`

sqrt_of_one_minus_x_squared.o: signal_processing/sqrt_of_one_minus_x_squared.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sqrt_of_one_minus_x_squared.o -MD -MP -MF $(DEPDIR)/sqrt_of_one_minus_x_squared.Tpo -c -o sqrt_of_one_minus_x_squared.o `test -f 'signal_processing/sqrt_of_one_minus_x_squared.c' || echo '$(srcdir)/'`signal_processing/sqrt_of_one_minus_x_squared.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/sqrt_of_one_minus_x_squared.Tpo $(DEPDIR)/sqrt_of_one_minus_x_squared.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/sqrt_of_one_minus_x_squared.c' object='sqrt_of_one_minus_x_squared.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sqrt_of_one_minus_x_squared.o `test -f 'signal_processing/sqrt_of_one_minus_x_squared.c' || echo '$(srcdir)/'`signal_processing/sqrt_of_one_minus_x_squared.c

sqrt_of_one_minus_x_squared.obj: signal_processing/sqrt_of_one_minus_x_squared.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sqrt_of_one_minus_x_squared.obj -MD -MP -MF $(DEPDIR)/sqrt_of_one_minus_x_squared.Tpo -c -o sqrt_of_one_minus_x_squared.obj `if test -f 'signal_processing/sqrt_of_one_minus_x_squared.c'; then $(CYGPATH_W) 'signal_processing/sqrt_of_one_minus_x_squared.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/sqrt_of_one_minus_x_squared.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/sqrt_of_one_minus_x_squared.Tpo $(DEPDIR)/sqrt_of_one_minus_x_squared.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/sqrt_of_one_minus_x_squared.c' object='sqrt_of_one_minus_x_squared.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sqrt_of_one_minus_x_squared.obj `if test -f 'signal_processing/sqrt_of_one_minus_x_squared.c'; then $(CYGPATH_W) 'signal_processing/sqrt_of_one_minus_x_squared.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/sqrt_of_one_minus_x_squared.c'; fi`

vector_scaling_operations.o: signal_processing/vector_scaling_operations.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scaling_operations.o -MD -MP -MF $(DEPDIR)/vector_scaling_operations.Tpo -c -o vector_scaling_operations.o `test -f 'signal_processing/vector_scaling_operations.c' || echo '$(srcdir)/'`signal_processing/vector_scaling_operations.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vector_scaling_operations.Tpo $(DEPDIR)/vector_scaling_operations.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/vector_scaling_operations.c' object='vector_scaling_operations.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scaling_operations.o `test -f 'signal_processing/vector_scaling_operations.c' || echo '$(srcdir)/'`signal_processing/vector_scaling_operations.c

vector_scaling_operations.obj: signal_processing/vector_scaling_operations.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scaling_operations.obj -MD -MP -MF $(DEPDIR)/vector_scaling_operations.Tpo -c -o vector_scaling_operations.obj `if test -f 'signal_processing/vector_scaling_operations.c'; then $(CYGPATH_W) 'signal_processing/vector_scaling_operations.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/vector_scaling_operations.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vector_scaling_operations.Tpo $(DEPDIR)/vector_scaling_operations.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/vector_scaling_operations.c' object='vector_scaling_operations.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scaling_operations.obj `if test -f 'signal_processing/vector_scaling_operations.c'; then $(CYGPATH_W) 'signal_processing/vector_scaling_operations.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/vector_scaling_operations.c'; fi`

webrtc_fft_t_1024_8.o: signal_processing/webrtc_fft_t_1024_8.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT webrtc_fft_t_1024_8.o -MD -MP -MF $(DEPDIR)/webrtc_fft_t_1024_8.Tpo -c -o webrtc_fft_t_1024_8.o `test -f 'signal_processing/webrtc_fft_t_1024_8.c' || echo '$(srcdir)/'`signal_processing/webrtc_fft_t_1024_8.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/webrtc_fft_t_1024_8.Tpo $(DEPDIR)/webrtc_fft_t_1024_8.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/webrtc_fft_t_1024_8.c' object='webrtc_fft_t_1024_8.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o webrtc_fft_t_1024_8.o `test -f 'signal_processing/webrtc_fft_t_1024_8.c' || echo '$(srcdir)/'`signal_processing/webrtc_fft_t_1024_8.c

webrtc_fft_t_1024_8.obj: signal_processing/webrtc_fft_t_1024_8.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT webrtc_fft_t_1024_8.obj -MD -MP -MF $(DEPDIR)/webrtc_fft_t_1024_8.Tpo -c -o webrtc_fft_t_1024_8.obj `if test -f 'signal_processing/webrtc_fft_t_1024_8.c'; then $(CYGPATH_W) 'signal_processing/webrtc_fft_t_1024_8.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/webrtc_fft_t_1024_8.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/webrtc_fft_t_1024_8.Tpo $(DEPDIR)/webrtc_fft_t_1024_8.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/webrtc_fft_t_1024_8.c' object='webrtc_fft_t_1024_8.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o webrtc_fft_t_1024_8.obj `if test -f 'signal_processing/webrtc_fft_t_1024_8.c'; then $(CYGPATH_W) 'signal_processing/webrtc_fft_t_1024_8.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/webrtc_fft_t_1024_8.c'; fi`

webrtc_fft_t_rad.o: signal_processing/webrtc_fft_t_rad.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT webrtc_fft_t_rad.o -MD -MP -MF $(DEPDIR)/webrtc_fft_t_rad.Tpo -c -o webrtc_fft_t_rad.o `test -f 'signal_processing/webrtc_fft_t_rad.c' || echo '$(srcdir)/'`signal_processing/webrtc_fft_t_rad.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/webrtc_fft_t_rad.Tpo $(DEPDIR)/webrtc_fft_t_rad.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/webrtc_fft_t_rad.c' object='webrtc_fft_t_rad.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o webrtc_fft_t_rad.o `test -f 'signal_processing/webrtc_fft_t_rad.c' || echo '$(srcdir)/'`signal_processing/webrtc_fft_t_rad.c

webrtc_fft_t_rad.obj: signal_processing/webrtc_fft_t_rad.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT webrtc_fft_t_rad.obj -MD -MP -MF $(DEPDIR)/webrtc_fft_t_rad.Tpo -c -o webrtc_fft_t_rad.obj `if test -f 'signal_processing/webrtc_fft_t_rad.c'; then $(CYGPATH_W) 'signal_processing/webrtc_fft_t_rad.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/webrtc_fft_t_rad.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/webrtc_fft_t_rad.Tpo $(DEPDIR)/webrtc_fft_t_rad.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_processing/webrtc_fft_t_rad.c' object='webrtc_fft_t_rad.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o webrtc_fft_t_rad.obj `if test -f 'signal_processing/webrtc_fft_t_rad.c'; then $(CYGPATH_W) 'signal_processing/webrtc_fft_t_rad.c'; else $(CYGPATH_W) '$(srcdir)/signal_processing/webrtc_fft_t_rad.c'; fi`

vad_core.o: vad/vad_core.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vad_core.o -MD -MP -MF $(DEPDIR)/vad_core.Tpo -c -o vad_core.o `test -f 'vad/vad_core.c' || echo '$(srcdir)/'`vad/vad_core.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vad_core.Tpo $(DEPDIR)/vad_core.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/vad_core.c' object='vad_core.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vad_core.o `test -f 'vad/vad_core.c' || echo '$(srcdir)/'`vad/vad_core.c

vad_core.obj: vad/vad_core.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vad_core.obj -MD -MP -MF $(DEPDIR)/vad_core.Tpo -c -o vad_core.obj `if test -f 'vad/vad_core.c'; then $(CYGPATH_W) 'vad/vad_core.c'; else $(CYGPATH_W) '$(srcdir)/vad/vad_core.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vad_core.Tpo $(DEPDIR)/vad_core.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/vad_core.c' object='vad_core.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vad_core.obj `if test -f 'vad/vad_core.c'; then $(CYGPATH_W) 'vad/vad_core.c'; else $(CYGPATH_W) '$(srcdir)/vad/vad_core.c'; fi`

vad_filterbank.o: vad/vad_filterbank.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vad_filterbank.o -MD -MP -MF $(DEPDIR)/vad_filterbank.Tpo -c -o vad_filterbank.o `test -f 'vad/vad_filterbank.c' || echo '$(srcdir)/'`vad/vad_filterbank.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vad_filterbank.Tpo $(DEPDIR)/vad_filterbank.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/vad_filterbank.c' object='vad_filterbank.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vad_filterbank.o `test -f 'vad/vad_filterbank.c' || echo '$(srcdir)/'`vad/vad_filterbank.c

vad_filterbank.obj: vad/vad_filterbank.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vad_filterbank.obj -MD -MP -MF $(DEPDIR)/vad_filterbank.Tpo -c -o vad_filterbank.obj `if test -f 'vad/vad_filterbank.c'; then $(CYGPATH_W) 'vad/vad_filterbank.c'; else $(CYGPATH_W) '$(srcdir)/vad/vad_filterbank.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vad_filterbank.Tpo $(DEPDIR)/vad_filterbank.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/vad_filterbank.c' object='vad_filterbank.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vad_filterbank.obj `if test -f 'vad/vad_filterbank.c'; then $(CYGPATH_W) 'vad/vad_filterbank.c'; else $(CYGPATH_W) '$(srcdir)/vad/vad_filterbank.c'; fi`

vad_gmm.o: vad/vad_gmm.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vad_gmm.o -MD -MP -MF $(DEPDIR)/vad_gmm.Tpo -c -o vad_gmm.o `test -f 'vad/vad_gmm.c' || echo '$(srcdir)/'`vad/vad_gmm.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vad_gmm.Tpo $(DEPDIR)/vad_gmm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/vad_gmm.c' object='vad_gmm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vad_gmm.o `test -f 'vad/vad_gmm.c' || echo '$(srcdir)/'`vad/vad_gmm.c

vad_gmm.obj: vad/vad_gmm.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vad_gmm.obj -MD -MP -MF $(DEPDIR)/vad_gmm.Tpo -c -o vad_gmm.obj `if test -f 'vad/vad_gmm.c'; then $(CYGPATH_W) 'vad/vad_gmm.c'; else $(CYGPATH_W) '$(srcdir)/vad/vad_gmm.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vad_gmm.Tpo $(DEPDIR)/vad_gmm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/vad_gmm.c' object='vad_gmm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vad_gmm.obj `if test -f 'vad/vad_gmm.c'; then $(CYGPATH_W) 'vad/vad_gmm.c'; else $(CYGPATH_W) '$(srcdir)/vad/vad_gmm.c'; fi`

vad_sp.o: vad/vad_sp.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vad_sp.o -MD -MP -MF $(DEPDIR)/vad_sp.Tpo -c -o vad_sp.o `test -f 'vad/vad_sp.c' || echo '$(srcdir)/'`vad/vad_sp.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vad_sp.Tpo $(DEPDIR)/vad_sp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/vad_sp.c' object='vad_sp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vad_sp.o `test -f 'vad/vad_sp.c' || echo '$(srcdir)/'`vad/vad_sp.c

vad_sp.obj: vad/vad_sp.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vad_sp.obj -MD -MP -MF $(DEPDIR)/vad_sp.Tpo -c -o vad_sp.obj `if test -f 'vad/vad_sp.c'; then $(CYGPATH_W) 'vad/vad_sp.c'; else $(CYGPATH_W) '$(srcdir)/vad/vad_sp.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/vad_sp.Tpo $(DEPDIR)/vad_sp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/vad_sp.c' object='vad_sp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vad_sp.obj `if test -f 'vad/vad_sp.c'; then $(CYGPATH_W) 'vad/vad_sp.c'; else $(CYGPATH_W) '$(srcdir)/vad/vad_sp.c'; fi`

webrtc_vad.o: vad/webrtc_vad.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT webrtc_vad.o -MD -MP -MF $(DEPDIR)/webrtc_vad.Tpo -c -o webrtc_vad.o `test -f 'vad/webrtc_vad.c' || echo '$(srcdir)/'`vad/webrtc_vad.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/webrtc_vad.Tpo $(DEPDIR)/webrtc_vad.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/webrtc_vad.c' object='webrtc_vad.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o webrtc_vad.o `test -f 'vad/webrtc_vad.c' || echo '$(srcdir)/'`vad/webrtc_vad.c

webrtc_vad.obj: vad/webrtc_vad.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT webrtc_vad.obj -MD -MP -MF $(DEPDIR)/webrtc_vad.Tpo -c -o webrtc_vad.obj `if test -f 'vad/webrtc_vad.c'; then $(CYGPATH_W) 'vad/webrtc_vad.c'; else $(CYGPATH_W) '$(srcdir)/vad/webrtc_vad.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/webrtc_vad.Tpo $(DEPDIR)/webrtc_vad.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vad/webrtc_vad.c' object='webrtc_vad.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o webrtc_vad.obj `if test -f 'vad/webrtc_vad.c'; then $(CYGPATH_W) 'vad/webrtc_vad.c'; else $(CYGPATH_W) '$(srcdir)/vad/webrtc_vad.c'; fi`

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

resampler.o: resampler/resampler.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT resampler.o -MD -MP -MF $(DEPDIR)/resampler.Tpo -c -o resampler.o `test -f 'resampler/resampler.cc' || echo '$(srcdir)/'`resampler/resampler.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/resampler.Tpo $(DEPDIR)/resampler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='resampler/resampler.cc' object='resampler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o resampler.o `test -f 'resampler/resampler.cc' || echo '$(srcdir)/'`resampler/resampler.cc

resampler.obj: resampler/resampler.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT resampler.obj -MD -MP -MF $(DEPDIR)/resampler.Tpo -c -o resampler.obj `if test -f 'resampler/resampler.cc'; then $(CYGPATH_W) 'resampler/resampler.cc'; else $(CYGPATH_W) '$(srcdir)/resampler/resampler.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/resampler.Tpo $(DEPDIR)/resampler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='resampler/resampler.cc' object='resampler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o resampler.obj `if test -f 'resampler/resampler.cc'; then $(CYGPATH_W) 'resampler/resampler.cc'; else $(CYGPATH_W) '$(srcdir)/resampler/resampler.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
