# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = openhriaudiomanager$(EXEEXT) portaudiooutput$(EXEEXT) \
	portaudioinput$(EXEEXT) pulseaudiooutput$(EXEEXT) \
	pulseaudioinput$(EXEEXT) echocanceler$(EXEEXT) \
	echosuppressor$(EXEEXT) samplingrateconverter$(EXEEXT) \
	noisereduction$(EXEEXT) combfilter$(EXEEXT) \
	signalgeneration$(EXEEXT) mixer$(EXEEXT) dsarray$(EXEEXT) \
	channelselector$(EXEEXT) beamforming$(EXEEXT) \
	autogaincontrol$(EXEEXT) wavrecord$(EXEEXT) wavplayer$(EXEEXT) \
	webrtcvad$(EXEEXT) gatertc$(EXEEXT)
subdir = src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libautogaincontrol_la_LIBADD =
am_libautogaincontrol_la_OBJECTS = AutoGainControl.lo
libautogaincontrol_la_OBJECTS = $(am_libautogaincontrol_la_OBJECTS)
libbeamforming_la_LIBADD =
am_libbeamforming_la_OBJECTS = BeamForming.lo windowing.lo fftwrap.lo \
	smallft.lo
libbeamforming_la_OBJECTS = $(am_libbeamforming_la_OBJECTS)
libchannelselector_la_LIBADD =
am_libchannelselector_la_OBJECTS = ChannelSelector.lo
libchannelselector_la_OBJECTS = $(am_libchannelselector_la_OBJECTS)
libcombfilter_la_LIBADD =
am_libcombfilter_la_OBJECTS = CombFilter.lo
libcombfilter_la_OBJECTS = $(am_libcombfilter_la_OBJECTS)
libdsarray_la_LIBADD =
am_libdsarray_la_OBJECTS = DSArray.lo windowing.lo fftwrap.lo \
	smallft.lo
libdsarray_la_OBJECTS = $(am_libdsarray_la_OBJECTS)
libechocanceler_la_LIBADD =
am_libechocanceler_la_OBJECTS = EchoCanceler.lo
libechocanceler_la_OBJECTS = $(am_libechocanceler_la_OBJECTS)
libechosuppressor_la_LIBADD =
am_libechosuppressor_la_OBJECTS = EchoSuppressor.lo
libechosuppressor_la_OBJECTS = $(am_libechosuppressor_la_OBJECTS)
libgate_la_LIBADD =
am_libgate_la_OBJECTS = Gate.lo
libgate_la_OBJECTS = $(am_libgate_la_OBJECTS)
libmixer_la_LIBADD =
am_libmixer_la_OBJECTS = Mixer.lo
libmixer_la_OBJECTS = $(am_libmixer_la_OBJECTS)
libnoisereduction_la_LIBADD =
am_libnoisereduction_la_OBJECTS = NoiseReduction.lo windowing.lo \
	fftwrap.lo smallft.lo
libnoisereduction_la_OBJECTS = $(am_libnoisereduction_la_OBJECTS)
libportaudiortc_la_LIBADD =
am_libportaudiortc_la_OBJECTS = PortAudioInput.lo PortAudioOutput.lo \
	PortAudioRTC.lo
libportaudiortc_la_OBJECTS = $(am_libportaudiortc_la_OBJECTS)
libpulseaudioinput_la_LIBADD =
am_libpulseaudioinput_la_OBJECTS = PulseAudioInput.lo
libpulseaudioinput_la_OBJECTS = $(am_libpulseaudioinput_la_OBJECTS)
libpulseaudiooutput_la_LIBADD =
am_libpulseaudiooutput_la_OBJECTS = PulseAudioOutput.lo
libpulseaudiooutput_la_OBJECTS = $(am_libpulseaudiooutput_la_OBJECTS)
libsamplingrateconverter_la_LIBADD =
am_libsamplingrateconverter_la_OBJECTS = SamplingRateConverter.lo
libsamplingrateconverter_la_OBJECTS =  \
	$(am_libsamplingrateconverter_la_OBJECTS)
libsignalgeneration_la_LIBADD =
am_libsignalgeneration_la_OBJECTS = SignalGeneration.lo
libsignalgeneration_la_OBJECTS = $(am_libsignalgeneration_la_OBJECTS)
am__DEPENDENCIES_1 =
libwavplayer_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libwavplayer_la_OBJECTS = libwavplayer_la-WavPlayer.lo
libwavplayer_la_OBJECTS = $(am_libwavplayer_la_OBJECTS)
libwavrecord_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libwavrecord_la_OBJECTS = libwavrecord_la-WavRecord.lo
libwavrecord_la_OBJECTS = $(am_libwavrecord_la_OBJECTS)
libwebrtcvad_la_DEPENDENCIES =  \
	thirdparty/webrtc/common_audio/libwebrtccommonaudio.a
am_libwebrtcvad_la_OBJECTS = WebRTCVAD.lo
libwebrtcvad_la_OBJECTS = $(am_libwebrtcvad_la_OBJECTS)
PROGRAMS = $(bin_PROGRAMS)
am_autogaincontrol_OBJECTS = AutoGainControlComp.$(OBJEXT)
autogaincontrol_OBJECTS = $(am_autogaincontrol_OBJECTS)
autogaincontrol_DEPENDENCIES = libautogaincontrol.la
am_beamforming_OBJECTS = BeamFormingComp.$(OBJEXT)
beamforming_OBJECTS = $(am_beamforming_OBJECTS)
beamforming_DEPENDENCIES = libbeamforming.la
am_channelselector_OBJECTS = ChannelSelectorComp.$(OBJEXT)
channelselector_OBJECTS = $(am_channelselector_OBJECTS)
channelselector_DEPENDENCIES = libchannelselector.la
am_combfilter_OBJECTS = CombFilterComp.$(OBJEXT)
combfilter_OBJECTS = $(am_combfilter_OBJECTS)
combfilter_DEPENDENCIES = libcombfilter.la
am_dsarray_OBJECTS = DSArrayComp.$(OBJEXT)
dsarray_OBJECTS = $(am_dsarray_OBJECTS)
dsarray_DEPENDENCIES = libdsarray.la
am_echocanceler_OBJECTS = EchoCancelerComp.$(OBJEXT)
echocanceler_OBJECTS = $(am_echocanceler_OBJECTS)
echocanceler_DEPENDENCIES = libechocanceler.la
am_echosuppressor_OBJECTS = EchoSuppressorComp.$(OBJEXT)
echosuppressor_OBJECTS = $(am_echosuppressor_OBJECTS)
echosuppressor_DEPENDENCIES = libechosuppressor.la
am_gatertc_OBJECTS = GateComp.$(OBJEXT)
gatertc_OBJECTS = $(am_gatertc_OBJECTS)
gatertc_DEPENDENCIES = libgate.la
am_mixer_OBJECTS = MixerComp.$(OBJEXT)
mixer_OBJECTS = $(am_mixer_OBJECTS)
mixer_DEPENDENCIES = libmixer.la
am_noisereduction_OBJECTS = NoiseReductionComp.$(OBJEXT)
noisereduction_OBJECTS = $(am_noisereduction_OBJECTS)
noisereduction_DEPENDENCIES = libnoisereduction.la
am_openhriaudiomanager_OBJECTS =  \
	openhriaudiomanager-OpenHRIAudioManager.$(OBJEXT)
openhriaudiomanager_OBJECTS = $(am_openhriaudiomanager_OBJECTS)
openhriaudiomanager_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_portaudioinput_OBJECTS = PortAudioInputComp.$(OBJEXT)
portaudioinput_OBJECTS = $(am_portaudioinput_OBJECTS)
portaudioinput_DEPENDENCIES = libportaudiortc.la
am_portaudiooutput_OBJECTS = PortAudioOutputComp.$(OBJEXT)
portaudiooutput_OBJECTS = $(am_portaudiooutput_OBJECTS)
portaudiooutput_DEPENDENCIES = libportaudiortc.la
am_pulseaudioinput_OBJECTS = PulseAudioInputComp.$(OBJEXT)
pulseaudioinput_OBJECTS = $(am_pulseaudioinput_OBJECTS)
pulseaudioinput_DEPENDENCIES = libpulseaudioinput.la
am_pulseaudiooutput_OBJECTS = PulseAudioOutputComp.$(OBJEXT)
pulseaudiooutput_OBJECTS = $(am_pulseaudiooutput_OBJECTS)
pulseaudiooutput_DEPENDENCIES = libpulseaudiooutput.la
am_samplingrateconverter_OBJECTS =  \
	SamplingRateConverterComp.$(OBJEXT)
samplingrateconverter_OBJECTS = $(am_samplingrateconverter_OBJECTS)
samplingrateconverter_DEPENDENCIES = libsamplingrateconverter.la
am_signalgeneration_OBJECTS = SignalGenerationComp.$(OBJEXT)
signalgeneration_OBJECTS = $(am_signalgeneration_OBJECTS)
signalgeneration_DEPENDENCIES = libsignalgeneration.la
am_wavplayer_OBJECTS = wavplayer-WavPlayerComp.$(OBJEXT) \
	wavplayer-WavPlayer.$(OBJEXT)
wavplayer_OBJECTS = $(am_wavplayer_OBJECTS)
wavplayer_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_wavrecord_OBJECTS = wavrecord-WavRecordComp.$(OBJEXT) \
	wavrecord-WavRecord.$(OBJEXT)
wavrecord_OBJECTS = $(am_wavrecord_OBJECTS)
wavrecord_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_webrtcvad_OBJECTS = WebRTCVADComp.$(OBJEXT)
webrtcvad_OBJECTS = $(am_webrtcvad_OBJECTS)
webrtcvad_DEPENDENCIES = libwebrtcvad.la
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libautogaincontrol_la_SOURCES) \
	$(libbeamforming_la_SOURCES) $(libchannelselector_la_SOURCES) \
	$(libcombfilter_la_SOURCES) $(libdsarray_la_SOURCES) \
	$(libechocanceler_la_SOURCES) $(libechosuppressor_la_SOURCES) \
	$(libgate_la_SOURCES) $(libmixer_la_SOURCES) \
	$(libnoisereduction_la_SOURCES) $(libportaudiortc_la_SOURCES) \
	$(libpulseaudioinput_la_SOURCES) \
	$(libpulseaudiooutput_la_SOURCES) \
	$(libsamplingrateconverter_la_SOURCES) \
	$(libsignalgeneration_la_SOURCES) $(libwavplayer_la_SOURCES) \
	$(libwavrecord_la_SOURCES) $(libwebrtcvad_la_SOURCES) \
	$(autogaincontrol_SOURCES) $(beamforming_SOURCES) \
	$(channelselector_SOURCES) $(combfilter_SOURCES) \
	$(dsarray_SOURCES) $(echocanceler_SOURCES) \
	$(echosuppressor_SOURCES) $(gatertc_SOURCES) $(mixer_SOURCES) \
	$(noisereduction_SOURCES) $(openhriaudiomanager_SOURCES) \
	$(portaudioinput_SOURCES) $(portaudiooutput_SOURCES) \
	$(pulseaudioinput_SOURCES) $(pulseaudiooutput_SOURCES) \
	$(samplingrateconverter_SOURCES) $(signalgeneration_SOURCES) \
	$(wavplayer_SOURCES) $(wavrecord_SOURCES) $(webrtcvad_SOURCES)
DIST_SOURCES = $(libautogaincontrol_la_SOURCES) \
	$(libbeamforming_la_SOURCES) $(libchannelselector_la_SOURCES) \
	$(libcombfilter_la_SOURCES) $(libdsarray_la_SOURCES) \
	$(libechocanceler_la_SOURCES) $(libechosuppressor_la_SOURCES) \
	$(libgate_la_SOURCES) $(libmixer_la_SOURCES) \
	$(libnoisereduction_la_SOURCES) $(libportaudiortc_la_SOURCES) \
	$(libpulseaudioinput_la_SOURCES) \
	$(libpulseaudiooutput_la_SOURCES) \
	$(libsamplingrateconverter_la_SOURCES) \
	$(libsignalgeneration_la_SOURCES) $(libwavplayer_la_SOURCES) \
	$(libwavrecord_la_SOURCES) $(libwebrtcvad_la_SOURCES) \
	$(autogaincontrol_SOURCES) $(beamforming_SOURCES) \
	$(channelselector_SOURCES) $(combfilter_SOURCES) \
	$(dsarray_SOURCES) $(echocanceler_SOURCES) \
	$(echosuppressor_SOURCES) $(gatertc_SOURCES) $(mixer_SOURCES) \
	$(noisereduction_SOURCES) $(openhriaudiomanager_SOURCES) \
	$(portaudioinput_SOURCES) $(portaudiooutput_SOURCES) \
	$(pulseaudioinput_SOURCES) $(pulseaudiooutput_SOURCES) \
	$(samplingrateconverter_SOURCES) $(signalgeneration_SOURCES) \
	$(wavplayer_SOURCES) $(wavrecord_SOURCES) $(webrtcvad_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FFT_PKGCONFIG = @FFT_PKGCONFIG@
FGREP = @FGREP@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
GTKMM_CFLAGS = @GTKMM_CFLAGS@
GTKMM_LIBS = @GTKMM_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LDFLAGS@ @LIBS@ $(OPENRTM_LIBS) $(PULSEAUDIO_LIBS) -lm @LTLIBINTL@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKENSIS = @MAKENSIS@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENRTM_CFLAGS = @OPENRTM_CFLAGS@
OPENRTM_LIBS = @OPENRTM_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSUB = @POSUB@
PULSEAUDIO_CFLAGS = @PULSEAUDIO_CFLAGS@
PULSEAUDIO_LIBS = @PULSEAUDIO_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WIN32_LIBS = @WIN32_LIBS@
WINDRES = @WINDRES@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = thirdparty
lib_LTLIBRARIES = libportaudiortc.la libpulseaudiooutput.la libpulseaudioinput.la libechocanceler.la libechosuppressor.la libsamplingrateconverter.la libnoisereduction.la libcombfilter.la libsignalgeneration.la libmixer.la libdsarray.la libchannelselector.la libbeamforming.la libautogaincontrol.la libwavrecord.la libwavplayer.la libwebrtcvad.la libgate.la
AM_CPPFLAGS = -g -Wall @CFLAGS@ $(OPENRTM_CFLAGS) $(PULSEAUDIO_CFLAGS) @DEFS@ -DLOCALEDIR=\"$(localedir)\" -I thirdparty/webrtc -I thirdparty/webrtc/common_audio/vad/include
include_HEADERS = DescriptablePort.h PortAudioOutput.h PortAudioInput.h PulseAudioOutput.h PulseAudioInput.h EchoCanceler.h EchoSuppressor.h SamplingRateConverter.h NoiseReduction.h CombFilter.h SignalGeneration.h Mixer.h DSArray.h ChannelSelector.h BeamForming.h AutoGainControl.h WavRecord.h WavPlayer.h Gate.h WebRTCVAD.h windowing.h arch.h os_support.h fftwrap.h smallft.h
openhriaudiomanager_SOURCES = OpenHRIAudioManager.cpp
openhriaudiomanager_CPPFLAGS = $(AM_CPPFLAGS) $(GTKMM_CFLAGS)
openhriaudiomanager_LDADD = $(GTKMM_LIBS)
libportaudiortc_la_SOURCES = PortAudioInput.cpp PortAudioOutput.cpp PortAudioRTC.cpp
portaudioinput_SOURCES = PortAudioInputComp.cpp
portaudioinput_LDADD = libportaudiortc.la
portaudiooutput_SOURCES = PortAudioOutputComp.cpp
portaudiooutput_LDADD = libportaudiortc.la
libpulseaudiooutput_la_SOURCES = PulseAudioOutput.cpp
pulseaudiooutput_SOURCES = PulseAudioOutputComp.cpp
pulseaudiooutput_LDADD = libpulseaudiooutput.la
libpulseaudioinput_la_SOURCES = PulseAudioInput.cpp
pulseaudioinput_SOURCES = PulseAudioInputComp.cpp
pulseaudioinput_LDADD = libpulseaudioinput.la
libechocanceler_la_SOURCES = EchoCanceler.cpp
echocanceler_SOURCES = EchoCancelerComp.cpp
echocanceler_LDADD = libechocanceler.la
libechosuppressor_la_SOURCES = EchoSuppressor.cpp
echosuppressor_SOURCES = EchoSuppressorComp.cpp
echosuppressor_LDADD = libechosuppressor.la
libnoisereduction_la_SOURCES = NoiseReduction.cpp windowing.cpp fftwrap.c smallft.c
noisereduction_SOURCES = NoiseReductionComp.cpp
noisereduction_LDADD = libnoisereduction.la
libsamplingrateconverter_la_SOURCES = SamplingRateConverter.cpp
samplingrateconverter_SOURCES = SamplingRateConverterComp.cpp
samplingrateconverter_LDADD = libsamplingrateconverter.la
libcombfilter_la_SOURCES = CombFilter.cpp
combfilter_SOURCES = CombFilterComp.cpp
combfilter_LDADD = libcombfilter.la
libsignalgeneration_la_SOURCES = SignalGeneration.cpp
signalgeneration_SOURCES = SignalGenerationComp.cpp
signalgeneration_LDADD = libsignalgeneration.la
libmixer_la_SOURCES = Mixer.cpp
mixer_SOURCES = MixerComp.cpp
mixer_LDADD = libmixer.la
libdsarray_la_SOURCES = DSArray.cpp windowing.cpp fftwrap.c smallft.c
dsarray_SOURCES = DSArrayComp.cpp
dsarray_LDADD = libdsarray.la
libchannelselector_la_SOURCES = ChannelSelector.cpp
channelselector_SOURCES = ChannelSelectorComp.cpp
channelselector_LDADD = libchannelselector.la
libbeamforming_la_SOURCES = BeamForming.cpp windowing.cpp fftwrap.c smallft.c
beamforming_SOURCES = BeamFormingComp.cpp
beamforming_LDADD = libbeamforming.la
libautogaincontrol_la_SOURCES = AutoGainControl.cpp
autogaincontrol_SOURCES = AutoGainControlComp.cpp
autogaincontrol_LDADD = libautogaincontrol.la
AM_D_SHARED_LIB = -DSHARED_LIB
libwavrecord_la_SOURCES = WavRecord.cpp
libwavrecord_la_CPPFLAGS = $(AM_D_SHARED_LIB) $(AM_CPPFLAGS) $(GTKMM_CFLAGS)
libwavrecord_la_LIBADD = $(GTKMM_LIBS)
wavrecord_SOURCES = WavRecordComp.cpp WavRecord.cpp
wavrecord_CPPFLAGS = $(AM_CPPFLAGS) $(GTKMM_CFLAGS)
wavrecord_LDADD = $(GTKMM_LIBS)
libwavplayer_la_SOURCES = WavPlayer.cpp
libwavplayer_la_CPPFLAGS = $(AM_D_SHARED_LIB) $(AM_CPPFLAGS) $(GTKMM_CFLAGS)
libwavplayer_la_LIBADD = $(GTKMM_LIBS)
wavplayer_SOURCES = WavPlayerComp.cpp WavPlayer.cpp
wavplayer_CPPFLAGS = $(AM_CPPFLAGS) $(GTKMM_CFLAGS)
wavplayer_LDADD = $(GTKMM_LIBS)
libwebrtcvad_la_SOURCES = WebRTCVAD.cpp
libwebrtcvad_la_LIBADD = thirdparty/webrtc/common_audio/libwebrtccommonaudio.a
webrtcvad_SOURCES = WebRTCVADComp.cpp
webrtcvad_LDADD = libwebrtcvad.la
libgate_la_SOURCES = Gate.cpp
gatertc_SOURCES = GateComp.cpp
gatertc_LDADD = libgate.la
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libautogaincontrol.la: $(libautogaincontrol_la_OBJECTS) $(libautogaincontrol_la_DEPENDENCIES) $(EXTRA_libautogaincontrol_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libautogaincontrol_la_OBJECTS) $(libautogaincontrol_la_LIBADD) $(LIBS)
libbeamforming.la: $(libbeamforming_la_OBJECTS) $(libbeamforming_la_DEPENDENCIES) $(EXTRA_libbeamforming_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libbeamforming_la_OBJECTS) $(libbeamforming_la_LIBADD) $(LIBS)
libchannelselector.la: $(libchannelselector_la_OBJECTS) $(libchannelselector_la_DEPENDENCIES) $(EXTRA_libchannelselector_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libchannelselector_la_OBJECTS) $(libchannelselector_la_LIBADD) $(LIBS)
libcombfilter.la: $(libcombfilter_la_OBJECTS) $(libcombfilter_la_DEPENDENCIES) $(EXTRA_libcombfilter_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libcombfilter_la_OBJECTS) $(libcombfilter_la_LIBADD) $(LIBS)
libdsarray.la: $(libdsarray_la_OBJECTS) $(libdsarray_la_DEPENDENCIES) $(EXTRA_libdsarray_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libdsarray_la_OBJECTS) $(libdsarray_la_LIBADD) $(LIBS)
libechocanceler.la: $(libechocanceler_la_OBJECTS) $(libechocanceler_la_DEPENDENCIES) $(EXTRA_libechocanceler_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libechocanceler_la_OBJECTS) $(libechocanceler_la_LIBADD) $(LIBS)
libechosuppressor.la: $(libechosuppressor_la_OBJECTS) $(libechosuppressor_la_DEPENDENCIES) $(EXTRA_libechosuppressor_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libechosuppressor_la_OBJECTS) $(libechosuppressor_la_LIBADD) $(LIBS)
libgate.la: $(libgate_la_OBJECTS) $(libgate_la_DEPENDENCIES) $(EXTRA_libgate_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libgate_la_OBJECTS) $(libgate_la_LIBADD) $(LIBS)
libmixer.la: $(libmixer_la_OBJECTS) $(libmixer_la_DEPENDENCIES) $(EXTRA_libmixer_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libmixer_la_OBJECTS) $(libmixer_la_LIBADD) $(LIBS)
libnoisereduction.la: $(libnoisereduction_la_OBJECTS) $(libnoisereduction_la_DEPENDENCIES) $(EXTRA_libnoisereduction_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libnoisereduction_la_OBJECTS) $(libnoisereduction_la_LIBADD) $(LIBS)
libportaudiortc.la: $(libportaudiortc_la_OBJECTS) $(libportaudiortc_la_DEPENDENCIES) $(EXTRA_libportaudiortc_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libportaudiortc_la_OBJECTS) $(libportaudiortc_la_LIBADD) $(LIBS)
libpulseaudioinput.la: $(libpulseaudioinput_la_OBJECTS) $(libpulseaudioinput_la_DEPENDENCIES) $(EXTRA_libpulseaudioinput_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libpulseaudioinput_la_OBJECTS) $(libpulseaudioinput_la_LIBADD) $(LIBS)
libpulseaudiooutput.la: $(libpulseaudiooutput_la_OBJECTS) $(libpulseaudiooutput_la_DEPENDENCIES) $(EXTRA_libpulseaudiooutput_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libpulseaudiooutput_la_OBJECTS) $(libpulseaudiooutput_la_LIBADD) $(LIBS)
libsamplingrateconverter.la: $(libsamplingrateconverter_la_OBJECTS) $(libsamplingrateconverter_la_DEPENDENCIES) $(EXTRA_libsamplingrateconverter_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libsamplingrateconverter_la_OBJECTS) $(libsamplingrateconverter_la_LIBADD) $(LIBS)
libsignalgeneration.la: $(libsignalgeneration_la_OBJECTS) $(libsignalgeneration_la_DEPENDENCIES) $(EXTRA_libsignalgeneration_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libsignalgeneration_la_OBJECTS) $(libsignalgeneration_la_LIBADD) $(LIBS)
libwavplayer.la: $(libwavplayer_la_OBJECTS) $(libwavplayer_la_DEPENDENCIES) $(EXTRA_libwavplayer_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libwavplayer_la_OBJECTS) $(libwavplayer_la_LIBADD) $(LIBS)
libwavrecord.la: $(libwavrecord_la_OBJECTS) $(libwavrecord_la_DEPENDENCIES) $(EXTRA_libwavrecord_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libwavrecord_la_OBJECTS) $(libwavrecord_la_LIBADD) $(LIBS)
libwebrtcvad.la: $(libwebrtcvad_la_OBJECTS) $(libwebrtcvad_la_DEPENDENCIES) $(EXTRA_libwebrtcvad_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libwebrtcvad_la_OBJECTS) $(libwebrtcvad_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
autogaincontrol$(EXEEXT): $(autogaincontrol_OBJECTS) $(autogaincontrol_DEPENDENCIES) $(EXTRA_autogaincontrol_DEPENDENCIES) 
	@rm -f autogaincontrol$(EXEEXT)
	$(CXXLINK) $(autogaincontrol_OBJECTS) $(autogaincontrol_LDADD) $(LIBS)
beamforming$(EXEEXT): $(beamforming_OBJECTS) $(beamforming_DEPENDENCIES) $(EXTRA_beamforming_DEPENDENCIES) 
	@rm -f beamforming$(EXEEXT)
	$(CXXLINK) $(beamforming_OBJECTS) $(beamforming_LDADD) $(LIBS)
channelselector$(EXEEXT): $(channelselector_OBJECTS) $(channelselector_DEPENDENCIES) $(EXTRA_channelselector_DEPENDENCIES) 
	@rm -f channelselector$(EXEEXT)
	$(CXXLINK) $(channelselector_OBJECTS) $(channelselector_LDADD) $(LIBS)
combfilter$(EXEEXT): $(combfilter_OBJECTS) $(combfilter_DEPENDENCIES) $(EXTRA_combfilter_DEPENDENCIES) 
	@rm -f combfilter$(EXEEXT)
	$(CXXLINK) $(combfilter_OBJECTS) $(combfilter_LDADD) $(LIBS)
dsarray$(EXEEXT): $(dsarray_OBJECTS) $(dsarray_DEPENDENCIES) $(EXTRA_dsarray_DEPENDENCIES) 
	@rm -f dsarray$(EXEEXT)
	$(CXXLINK) $(dsarray_OBJECTS) $(dsarray_LDADD) $(LIBS)
echocanceler$(EXEEXT): $(echocanceler_OBJECTS) $(echocanceler_DEPENDENCIES) $(EXTRA_echocanceler_DEPENDENCIES) 
	@rm -f echocanceler$(EXEEXT)
	$(CXXLINK) $(echocanceler_OBJECTS) $(echocanceler_LDADD) $(LIBS)
echosuppressor$(EXEEXT): $(echosuppressor_OBJECTS) $(echosuppressor_DEPENDENCIES) $(EXTRA_echosuppressor_DEPENDENCIES) 
	@rm -f echosuppressor$(EXEEXT)
	$(CXXLINK) $(echosuppressor_OBJECTS) $(echosuppressor_LDADD) $(LIBS)
gatertc$(EXEEXT): $(gatertc_OBJECTS) $(gatertc_DEPENDENCIES) $(EXTRA_gatertc_DEPENDENCIES) 
	@rm -f gatertc$(EXEEXT)
	$(CXXLINK) $(gatertc_OBJECTS) $(gatertc_LDADD) $(LIBS)
mixer$(EXEEXT): $(mixer_OBJECTS) $(mixer_DEPENDENCIES) $(EXTRA_mixer_DEPENDENCIES) 
	@rm -f mixer$(EXEEXT)
	$(CXXLINK) $(mixer_OBJECTS) $(mixer_LDADD) $(LIBS)
noisereduction$(EXEEXT): $(noisereduction_OBJECTS) $(noisereduction_DEPENDENCIES) $(EXTRA_noisereduction_DEPENDENCIES) 
	@rm -f noisereduction$(EXEEXT)
	$(CXXLINK) $(noisereduction_OBJECTS) $(noisereduction_LDADD) $(LIBS)
openhriaudiomanager$(EXEEXT): $(openhriaudiomanager_OBJECTS) $(openhriaudiomanager_DEPENDENCIES) $(EXTRA_openhriaudiomanager_DEPENDENCIES) 
	@rm -f openhriaudiomanager$(EXEEXT)
	$(CXXLINK) $(openhriaudiomanager_OBJECTS) $(openhriaudiomanager_LDADD) $(LIBS)
portaudioinput$(EXEEXT): $(portaudioinput_OBJECTS) $(portaudioinput_DEPENDENCIES) $(EXTRA_portaudioinput_DEPENDENCIES) 
	@rm -f portaudioinput$(EXEEXT)
	$(CXXLINK) $(portaudioinput_OBJECTS) $(portaudioinput_LDADD) $(LIBS)
portaudiooutput$(EXEEXT): $(portaudiooutput_OBJECTS) $(portaudiooutput_DEPENDENCIES) $(EXTRA_portaudiooutput_DEPENDENCIES) 
	@rm -f portaudiooutput$(EXEEXT)
	$(CXXLINK) $(portaudiooutput_OBJECTS) $(portaudiooutput_LDADD) $(LIBS)
pulseaudioinput$(EXEEXT): $(pulseaudioinput_OBJECTS) $(pulseaudioinput_DEPENDENCIES) $(EXTRA_pulseaudioinput_DEPENDENCIES) 
	@rm -f pulseaudioinput$(EXEEXT)
	$(CXXLINK) $(pulseaudioinput_OBJECTS) $(pulseaudioinput_LDADD) $(LIBS)
pulseaudiooutput$(EXEEXT): $(pulseaudiooutput_OBJECTS) $(pulseaudiooutput_DEPENDENCIES) $(EXTRA_pulseaudiooutput_DEPENDENCIES) 
	@rm -f pulseaudiooutput$(EXEEXT)
	$(CXXLINK) $(pulseaudiooutput_OBJECTS) $(pulseaudiooutput_LDADD) $(LIBS)
samplingrateconverter$(EXEEXT): $(samplingrateconverter_OBJECTS) $(samplingrateconverter_DEPENDENCIES) $(EXTRA_samplingrateconverter_DEPENDENCIES) 
	@rm -f samplingrateconverter$(EXEEXT)
	$(CXXLINK) $(samplingrateconverter_OBJECTS) $(samplingrateconverter_LDADD) $(LIBS)
signalgeneration$(EXEEXT): $(signalgeneration_OBJECTS) $(signalgeneration_DEPENDENCIES) $(EXTRA_signalgeneration_DEPENDENCIES) 
	@rm -f signalgeneration$(EXEEXT)
	$(CXXLINK) $(signalgeneration_OBJECTS) $(signalgeneration_LDADD) $(LIBS)
wavplayer$(EXEEXT): $(wavplayer_OBJECTS) $(wavplayer_DEPENDENCIES) $(EXTRA_wavplayer_DEPENDENCIES) 
	@rm -f wavplayer$(EXEEXT)
	$(CXXLINK) $(wavplayer_OBJECTS) $(wavplayer_LDADD) $(LIBS)
wavrecord$(EXEEXT): $(wavrecord_OBJECTS) $(wavrecord_DEPENDENCIES) $(EXTRA_wavrecord_DEPENDENCIES) 
	@rm -f wavrecord$(EXEEXT)
	$(CXXLINK) $(wavrecord_OBJECTS) $(wavrecord_LDADD) $(LIBS)
webrtcvad$(EXEEXT): $(webrtcvad_OBJECTS) $(webrtcvad_DEPENDENCIES) $(EXTRA_webrtcvad_DEPENDENCIES) 
	@rm -f webrtcvad$(EXEEXT)
	$(CXXLINK) $(webrtcvad_OBJECTS) $(webrtcvad_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AutoGainControl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AutoGainControlComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BeamForming.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BeamFormingComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChannelSelector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChannelSelectorComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CombFilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CombFilterComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DSArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DSArrayComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EchoCanceler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EchoCancelerComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EchoSuppressor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EchoSuppressorComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Gate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GateComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Mixer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MixerComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NoiseReduction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NoiseReductionComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PortAudioInput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PortAudioInputComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PortAudioOutput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PortAudioOutputComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PortAudioRTC.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PulseAudioInput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PulseAudioInputComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PulseAudioOutput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PulseAudioOutputComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SamplingRateConverter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SamplingRateConverterComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SignalGeneration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SignalGenerationComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WebRTCVAD.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WebRTCVADComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fftwrap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwavplayer_la-WavPlayer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwavrecord_la-WavRecord.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openhriaudiomanager-OpenHRIAudioManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smallft.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavplayer-WavPlayer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavplayer-WavPlayerComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavrecord-WavRecord.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavrecord-WavRecordComp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/windowing.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libwavplayer_la-WavPlayer.lo: WavPlayer.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwavplayer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwavplayer_la-WavPlayer.lo -MD -MP -MF $(DEPDIR)/libwavplayer_la-WavPlayer.Tpo -c -o libwavplayer_la-WavPlayer.lo `test -f 'WavPlayer.cpp' || echo '$(srcdir)/'`WavPlayer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libwavplayer_la-WavPlayer.Tpo $(DEPDIR)/libwavplayer_la-WavPlayer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavPlayer.cpp' object='libwavplayer_la-WavPlayer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwavplayer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwavplayer_la-WavPlayer.lo `test -f 'WavPlayer.cpp' || echo '$(srcdir)/'`WavPlayer.cpp

libwavrecord_la-WavRecord.lo: WavRecord.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwavrecord_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwavrecord_la-WavRecord.lo -MD -MP -MF $(DEPDIR)/libwavrecord_la-WavRecord.Tpo -c -o libwavrecord_la-WavRecord.lo `test -f 'WavRecord.cpp' || echo '$(srcdir)/'`WavRecord.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libwavrecord_la-WavRecord.Tpo $(DEPDIR)/libwavrecord_la-WavRecord.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavRecord.cpp' object='libwavrecord_la-WavRecord.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwavrecord_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwavrecord_la-WavRecord.lo `test -f 'WavRecord.cpp' || echo '$(srcdir)/'`WavRecord.cpp

openhriaudiomanager-OpenHRIAudioManager.o: OpenHRIAudioManager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openhriaudiomanager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT openhriaudiomanager-OpenHRIAudioManager.o -MD -MP -MF $(DEPDIR)/openhriaudiomanager-OpenHRIAudioManager.Tpo -c -o openhriaudiomanager-OpenHRIAudioManager.o `test -f 'OpenHRIAudioManager.cpp' || echo '$(srcdir)/'`OpenHRIAudioManager.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/openhriaudiomanager-OpenHRIAudioManager.Tpo $(DEPDIR)/openhriaudiomanager-OpenHRIAudioManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='OpenHRIAudioManager.cpp' object='openhriaudiomanager-OpenHRIAudioManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openhriaudiomanager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o openhriaudiomanager-OpenHRIAudioManager.o `test -f 'OpenHRIAudioManager.cpp' || echo '$(srcdir)/'`OpenHRIAudioManager.cpp

openhriaudiomanager-OpenHRIAudioManager.obj: OpenHRIAudioManager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openhriaudiomanager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT openhriaudiomanager-OpenHRIAudioManager.obj -MD -MP -MF $(DEPDIR)/openhriaudiomanager-OpenHRIAudioManager.Tpo -c -o openhriaudiomanager-OpenHRIAudioManager.obj `if test -f 'OpenHRIAudioManager.cpp'; then $(CYGPATH_W) 'OpenHRIAudioManager.cpp'; else $(CYGPATH_W) '$(srcdir)/OpenHRIAudioManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/openhriaudiomanager-OpenHRIAudioManager.Tpo $(DEPDIR)/openhriaudiomanager-OpenHRIAudioManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='OpenHRIAudioManager.cpp' object='openhriaudiomanager-OpenHRIAudioManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openhriaudiomanager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o openhriaudiomanager-OpenHRIAudioManager.obj `if test -f 'OpenHRIAudioManager.cpp'; then $(CYGPATH_W) 'OpenHRIAudioManager.cpp'; else $(CYGPATH_W) '$(srcdir)/OpenHRIAudioManager.cpp'; fi`

wavplayer-WavPlayerComp.o: WavPlayerComp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavplayer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wavplayer-WavPlayerComp.o -MD -MP -MF $(DEPDIR)/wavplayer-WavPlayerComp.Tpo -c -o wavplayer-WavPlayerComp.o `test -f 'WavPlayerComp.cpp' || echo '$(srcdir)/'`WavPlayerComp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/wavplayer-WavPlayerComp.Tpo $(DEPDIR)/wavplayer-WavPlayerComp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavPlayerComp.cpp' object='wavplayer-WavPlayerComp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavplayer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wavplayer-WavPlayerComp.o `test -f 'WavPlayerComp.cpp' || echo '$(srcdir)/'`WavPlayerComp.cpp

wavplayer-WavPlayerComp.obj: WavPlayerComp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavplayer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wavplayer-WavPlayerComp.obj -MD -MP -MF $(DEPDIR)/wavplayer-WavPlayerComp.Tpo -c -o wavplayer-WavPlayerComp.obj `if test -f 'WavPlayerComp.cpp'; then $(CYGPATH_W) 'WavPlayerComp.cpp'; else $(CYGPATH_W) '$(srcdir)/WavPlayerComp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/wavplayer-WavPlayerComp.Tpo $(DEPDIR)/wavplayer-WavPlayerComp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavPlayerComp.cpp' object='wavplayer-WavPlayerComp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavplayer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wavplayer-WavPlayerComp.obj `if test -f 'WavPlayerComp.cpp'; then $(CYGPATH_W) 'WavPlayerComp.cpp'; else $(CYGPATH_W) '$(srcdir)/WavPlayerComp.cpp'; fi`

wavplayer-WavPlayer.o: WavPlayer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavplayer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wavplayer-WavPlayer.o -MD -MP -MF $(DEPDIR)/wavplayer-WavPlayer.Tpo -c -o wavplayer-WavPlayer.o `test -f 'WavPlayer.cpp' || echo '$(srcdir)/'`WavPlayer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/wavplayer-WavPlayer.Tpo $(DEPDIR)/wavplayer-WavPlayer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavPlayer.cpp' object='wavplayer-WavPlayer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavplayer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wavplayer-WavPlayer.o `test -f 'WavPlayer.cpp' || echo '$(srcdir)/'`WavPlayer.cpp

wavplayer-WavPlayer.obj: WavPlayer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavplayer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wavplayer-WavPlayer.obj -MD -MP -MF $(DEPDIR)/wavplayer-WavPlayer.Tpo -c -o wavplayer-WavPlayer.obj `if test -f 'WavPlayer.cpp'; then $(CYGPATH_W) 'WavPlayer.cpp'; else $(CYGPATH_W) '$(srcdir)/WavPlayer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/wavplayer-WavPlayer.Tpo $(DEPDIR)/wavplayer-WavPlayer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavPlayer.cpp' object='wavplayer-WavPlayer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavplayer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wavplayer-WavPlayer.obj `if test -f 'WavPlayer.cpp'; then $(CYGPATH_W) 'WavPlayer.cpp'; else $(CYGPATH_W) '$(srcdir)/WavPlayer.cpp'; fi`

wavrecord-WavRecordComp.o: WavRecordComp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavrecord_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wavrecord-WavRecordComp.o -MD -MP -MF $(DEPDIR)/wavrecord-WavRecordComp.Tpo -c -o wavrecord-WavRecordComp.o `test -f 'WavRecordComp.cpp' || echo '$(srcdir)/'`WavRecordComp.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/wavrecord-WavRecordComp.Tpo $(DEPDIR)/wavrecord-WavRecordComp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavRecordComp.cpp' object='wavrecord-WavRecordComp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavrecord_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wavrecord-WavRecordComp.o `test -f 'WavRecordComp.cpp' || echo '$(srcdir)/'`WavRecordComp.cpp

wavrecord-WavRecordComp.obj: WavRecordComp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavrecord_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wavrecord-WavRecordComp.obj -MD -MP -MF $(DEPDIR)/wavrecord-WavRecordComp.Tpo -c -o wavrecord-WavRecordComp.obj `if test -f 'WavRecordComp.cpp'; then $(CYGPATH_W) 'WavRecordComp.cpp'; else $(CYGPATH_W) '$(srcdir)/WavRecordComp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/wavrecord-WavRecordComp.Tpo $(DEPDIR)/wavrecord-WavRecordComp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavRecordComp.cpp' object='wavrecord-WavRecordComp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavrecord_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wavrecord-WavRecordComp.obj `if test -f 'WavRecordComp.cpp'; then $(CYGPATH_W) 'WavRecordComp.cpp'; else $(CYGPATH_W) '$(srcdir)/WavRecordComp.cpp'; fi`

wavrecord-WavRecord.o: WavRecord.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavrecord_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wavrecord-WavRecord.o -MD -MP -MF $(DEPDIR)/wavrecord-WavRecord.Tpo -c -o wavrecord-WavRecord.o `test -f 'WavRecord.cpp' || echo '$(srcdir)/'`WavRecord.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/wavrecord-WavRecord.Tpo $(DEPDIR)/wavrecord-WavRecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavRecord.cpp' object='wavrecord-WavRecord.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavrecord_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wavrecord-WavRecord.o `test -f 'WavRecord.cpp' || echo '$(srcdir)/'`WavRecord.cpp

wavrecord-WavRecord.obj: WavRecord.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavrecord_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wavrecord-WavRecord.obj -MD -MP -MF $(DEPDIR)/wavrecord-WavRecord.Tpo -c -o wavrecord-WavRecord.obj `if test -f 'WavRecord.cpp'; then $(CYGPATH_W) 'WavRecord.cpp'; else $(CYGPATH_W) '$(srcdir)/WavRecord.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/wavrecord-WavRecord.Tpo $(DEPDIR)/wavrecord-WavRecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='WavRecord.cpp' object='wavrecord-WavRecord.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(wavrecord_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wavrecord-WavRecord.obj `if test -f 'WavRecord.cpp'; then $(CYGPATH_W) 'WavRecord.cpp'; else $(CYGPATH_W) '$(srcdir)/WavRecord.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
